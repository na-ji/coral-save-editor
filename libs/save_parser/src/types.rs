use uesave::{StructType, Types};

#[rustfmt::skip]
pub fn get_types() -> Types {
    let mut types = Types::new();

    types.add(String::from(".SaveData.timeLocationMapTracker.Key"), StructType::DateTime);
    types.add(String::from(".SaveData.timeLocationMapTracker.Value"), StructType::Vector);
    types.add(String::from(".SaveData.interiorSaveDataMap.Value"), StructType::Struct(Some(String::from("Map"))));
    types.add(String::from(".SaveData.interiorSaveDataMap.tileEntryMap.Key"), StructType::Struct(None));
    types.add(String::from(".SaveData.interiorSaveDataMap.tileEntryMap.Value"), StructType::Struct(Some(String::from("Map"))));
    types.add(String::from(".SaveData.interiorSaveDataMap.tileEntryMap.wallObjects.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.furnitureSaveDataMap.Value"), StructType::Struct(Some(String::from("Map"))));
    types.add(String::from(".SaveData.furnitureSaveDataMap.savedEntryMap.Value"), StructType::Struct(Some(String::from("Map"))));
    types.add(String::from(".SaveData.furnitureSaveDataMap.savedEntryMap.entryArray.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.NPCSaveData.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.NPCSaveData.triggeredDynamicDialog.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.npcWorldSpeechCooldownMap.Value"), StructType::Struct(Some(String::from("Map"))));
    types.add(String::from(".SaveData.npcWorldSpeechCooldownMap.waypointTriggerMap.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.shopStocks.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.shopStocks.stockItems.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.shopStocks.limitedItemStock.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.dayEndEventCooldownMap.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.unlockedTornPages.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.mailRuntimeTags.Value"), StructType::GameplayTagContainer);
    types.add(String::from(".SaveData.questRuntimeTags.Value"), StructType::GameplayTagContainer);
    types.add(String::from(".SaveData.mineProgressionMap.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.labUpgradeData.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.donatedItemInfo"), StructType::Struct(Some(String::from("Set"))));
    types.add(String::from(".SaveData.dynamicQuestDataMap.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.enchantmentSaveData.enchantmentSaveDataMap.Value"), StructType::Struct(Some(String::from("Map"))));
    types.add(String::from(".SaveData.offeringGroupsMap.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.offeringGroupsMap.offeringsMap.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.divingOfferingMap.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.procToGrowSaves.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.divingLevelData.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.divingLevelData.clusterData.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.caughtFish.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.lastGiftFromNPCDate.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.minigameClaimedReward.claimedRewardWinPosition.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.itemStorageDataMap.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.gridObjectsDataMap.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.farmHouseMaterials.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.ranchBuildingData.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.ranchBuildingData.animalsData.logAnimalMoods.Key"), StructType::Struct(None));
    types.add(String::from(".SaveData.ranchBuildingData.animalsData.logAnimalMoods.Value"), StructType::Struct(Some(String::from("Set"))));
    types.add(String::from(".SaveData.ranchBuildingData.autoCollectorData.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.ranchBuildingData.interiorSaveData.tileEntryMap.Key"), StructType::Struct(None));
    types.add(String::from(".SaveData.ranchBuildingData.interiorSaveData.tileEntryMap.Value"), StructType::Struct(Some(String::from("Map"))));
    types.add(String::from(".SaveData.ranchBuildingData.interiorSaveData.tileEntryMap.wallObjects.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.ranchBuildingData.placedData.savedEntryMap.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.ranchBuildingData.placedData.savedEntryMap.entryArray.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.gachaMachineData.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.tileSaveDataMap.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.tileSaveDataMap.savedEntryMap.Key"), StructType::Struct(None));
    types.add(String::from(".SaveData.tileSaveDataMap.savedEntryMap.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.farmTileSaveDataMap.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.farmTileSaveDataMap.savedEntryMap.Key"), StructType::Struct(None));
    types.add(String::from(".SaveData.farmTileSaveDataMap.savedEntryMap.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.players.playerStatistics.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.players.playerMasteryLevel.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.players.caughtBug.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.players.journalData.fishingCaughtables.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.players.journalData.catchingCaughtables.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.players.weekNpcHangoutData.Value"), StructType::Struct(Some(String::from("int32"))));
    types.add(String::from(".SaveData.cropSaveDataMap.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.cropSaveDataMap.savedEntryMap.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.cropSaveDataMap.savedEntryMap.entryArray.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.debrisSaveDataMap.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.debrisSaveDataMap.savedEntryMap.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.debrisSaveDataMap.savedEntryMap.entryArray.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.farmBuildingSaveDataMap.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.farmBuildingSaveDataMap.savedEntryMap.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.farmBuildingSaveDataMap.savedEntryMap.entryArray.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.fruitPlantSaveDataMap.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.fruitPlantSaveDataMap.savedEntryMap.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.fruitPlantSaveDataMap.savedEntryMap.entryArray.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.fruitTreeSaveDataMap.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.fruitTreeSaveDataMap.savedEntryMap.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.fruitTreeSaveDataMap.savedEntryMap.entryArray.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.grassSaveDataMap.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.grassSaveDataMap.savedEntryMap.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.grassSaveDataMap.savedEntryMap.entryArray.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.grassSaveDataMap.savedEntryMap.entryArray.tuftInQuadrantMap.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.groundSaveDataMap.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.groundSaveDataMap.savedEntryMap.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.groundSaveDataMap.savedEntryMap.entryArray.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.lootSaveDataMap.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.lootSaveDataMap.savedEntryMap.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.lootSaveDataMap.savedEntryMap.entryArray.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.placedSaveDataMap.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.placedSaveDataMap.savedEntryMap.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.placedSaveDataMap.savedEntryMap.entryArray.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.fenceSaveDataMap.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.fenceSaveDataMap.savedEntryMap.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.gateSaveDataMap.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.gateSaveDataMap.savedEntryMap.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.floorSaveDataMap.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.floorSaveDataMap.savedEntryMap.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.treeSaveDataMap.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.treeSaveDataMap.savedEntryMap.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.treeSaveDataMap.savedEntryMap.entryArray.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.disturbedSoilDataMap.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.disturbedSoilDataMap.savedEntryMap.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.disturbedSoilDataMap.savedEntryMap.entryArray.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.giantCropDataMap.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.giantCropDataMap.savedEntryMap.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.fertilizerDataMap.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.fertilizerDataMap.savedEntryMap.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.fertilizerDataMap.savedEntryMap.entryArray.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.excavationSoilDataMap.Value"), StructType::Struct(None));
    types.add(String::from(".SaveData.excavationSoilDataMap.savedEntryMap.Value"), StructType::Struct(None));

    types
}
